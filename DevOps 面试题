1 、都说 linux 下一切皆文件，你是怎么理解的？
2 、都说 socket 在 linux 实际是一个文件，是通过什么技术将 socket 变成一个文件的？
3 、linux 下软 /硬连接是什么，他们有什么区别？
4 、linux 下一个用户登录以下文件加载顺序是？~/.bash_profile, ~/.bash_login, ~/.profile, ~/.bashrc, /etc/profile
5 、都说 systemd 他可以并行启动，他的实现原理是？ 僵尸进程 /孤儿进程他们是？区别是啥？为什么说 ssh 很安全？具体原理是？如何保证的
6 、shell 相关 [[]] [] (()) () 他们区别是？
7 、shell fuction 如何返回字符串
8 、shell $# $* 是什么意思
9 、如何使用 shell 实现一个爬虫，你描述下整个过程，会用到哪些命令？
10 、redis 哨兵机制主从是如何切换的？
11 、网络 mtu 是什么？他发生在那一层，如果 2 个设备 mtu 值不同，以谁为准，那么 2 个设备是如何协商的？详细协商流程是？
12 、0.0.0.0 255.255.255.255 这 2 个 ip 地址是什么意思？他们的适用场景是？ VIP 如何漂移的？他的底层原理是？
13 、tunnel VPN 翻墙他实现的原理是，他是怎么绕过防火墙的，数据包传输流程，他在那一层欺骗了防火墙等
14 、nginx 相关 正向 /反向代理是什么意思？他们区别是？
15 、一般架构 nginx 集群 --反向代理--> tomcat ，为什么不能反过来部署呢？高并发 /动静分离等，这些我程序也可以做
16 、都说 nginx 轻量级，比如对比 tomcat ，epoll 是操作系统机制，与 nginx 无关，我自己开发也可以调用，内存占用小 /启动快这不是特点，模块化这也不是特点，我自己开发程序也可以实现。。。
17 、都说 docker 轻量级，他轻量在哪里，从技术角度分析，咱们都是搞技术，不需要从产品角度分析他为什么轻量？
18 、docker volume bind mount 他们区别是什么？ 如何构建最小的镜像，说说你的思路？
19 、docker -p/P 他的实现原理是什么？
20 、Infrastructure as code 思想，你是怎么理解的？
21 、资产管理 /配置管理他们分别是？区别是？
22 、持续部署 /持续交付他们是？区别是？
23 、ci/cd 带来的好处是？蓝绿发布是？他的优缺点？
24 、jenkins 如何通过原生方式备份配置 /job 等（不通过 jenkins 提供导入导出 /及拷贝整个目录）
25 、pipeline 是什么，他有什么优势？
26 、jenkins 我要在其他环境重放 job 如何实现？
27 、shift-left 你是怎么理解的？
28 、git 相关 svn/git 分别是？他们有什么区别？
29 、git 中 index/local/remote/workspace 他们是？比如 git add xxx 他发生了什么？
30 、都说 git 管理 /切分支等轻量，他们轻量在哪里，具体原理是？
31 、git rebase xxx 发送冲突时，他的根本原因是？不要说具体场景； git fetch/git pull 他们区别是？
32 、你平时开发使用一套分支流程是？为什么要这么做？他的优缺点是？
33 、kafka 相关 broker partition segment 他们是？他们关系是？
34 、kafka 如何保证数据可靠？ ISR 是什么？他的工作机制是？
35 、python 相关 GIL 是什么，为什么需要它？
36 、python decoration(装饰器) 他的场景是？他的原理是？
37 、如果要你实现一个 sidecar ，说说你的思路？
38 、线上一个服务响应很慢，你如何排查，排查流程是？
